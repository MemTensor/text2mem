{
  "title": "Text2Mem IR v1",
  "description": "Text2Mem IR v1: standard JSON contract for LLM/tool operations.",
  "x-description-zh": "Text2Mem IR v1：用于 LLM/工具协作的标准 JSON 协议。",
  "type": "object",
  "additionalProperties": false,
  "required": ["stage", "op"],
  "properties": {
    "stage": { "type": "string", "enum": ["ENC", "STO", "RET"] },
    "op": { "$ref": "#/$defs/Op" },
    "target": { "$ref": "#/$defs/Target" },
    "args": { "type": "object" },
    "_comment": {
      "type": "string",
      "description": "Optional human-readable note; ignored by engine execution.",
      "x-description-zh": "可选注释，仅用于可读性，执行时忽略。"
    },
    "meta": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "actor": { "type": "string" },
  "lang": { "type": "string", "description": "Language preference, e.g., zh | en; used to choose prompt/summarization language.", "x-description-zh": "语言标注，如 zh|en；可用于提示词或摘要语言选择。" },
        "trace_id": { "type": "string" },
        "timestamp": { "type": "string", "format": "date-time" },
  "dry_run": { "type": "boolean", "default": false, "description": "Dry-run mode: returns SQL/plan only without persisting (recommended for pre-checking risky operations).", "x-description-zh": "演练模式：只返回 SQL/计划 而不落库（用于危险操作预检）。" },
  "confirmation": { "type": "boolean", "default": false, "description": "Confirmation switch: with target.all, explicitly allows wide write operations.", "x-description-zh": "确认开关：与 target.all 配合使用，明确允许大范围写操作。" }
      }
    }
  },

  "allOf": [
    {
      "if": { "properties": { "op": { "const": "Encode" } }, "required": ["op"] },
      "then": {
        "properties": {
          "stage": { "const": "ENC" },
          "args": {
            "type": "object",
            "required": ["payload"],
            "additionalProperties": false,
            "properties": {
              "payload": {
                "type": "object",
                "description": "Content to encode (choose one): text (plain), url (remote resource), or structured (object).",
                "x-description-zh": "待编码内容（三选一）：text 纯文本，url 在线资源，structured 结构化数据对象。",
                "oneOf": [
                  { "required": ["text"] },
                  { "required": ["url"] },
                  { "required": ["structured"] }
                ],
                "properties": {
                  "text": { "type": "string", "description": "Text to encode (recommended <= 4K tokens).", "x-description-zh": "要编码的文本（建议<= 4K tokens）。" },
                  "url": { "type": "string", "format": "uri", "description": "Fetchable resource URL (system retrieves the content).", "x-description-zh": "可抓取的资源链接（系统自行拉取内容）。" },
                  "structured": { "type": "object", "description": "Arbitrary structured object; system will serialize/summarize then encode.", "x-description-zh": "任意结构化对象，系统会做序列化/摘要后编码。" }
                },
                "additionalProperties": true
              },
              
              "type": { "$ref": "#/$defs/Type" },
              "tags": { "$ref": "#/$defs/Tags" },
              "facets": { "$ref": "#/$defs/Facets" },
              "time": { "type": "string", "format": "date-time", "description": "ISO8601 time, e.g., 2025-09-01T10:00:00Z.", "x-description-zh": "ISO8601 时间，比如 2025-09-01T10:00:00Z。" },
              "subject": { "type": "string" },
              "location": { "type": "string" },
              "topic": { "type": "string" },
              "skip_embedding": { "type": "boolean", "default": false, "description": "If true, do not generate embedding on write. Text+metadata are stored; item won’t participate in semantic search until embedding is later added via Update.", "x-description-zh": "若为 true，则写入时不生成嵌入向量。仅保存文本与元数据；在补充向量前，不参与语义检索。" },
              "source": { "type": "string" },
              "auto_frequency": { "type": "string", "description": "Auto refresh/reminder frequency: ISO8601 duration or RFC5545 RRULE.", "x-description-zh": "自动刷新/提醒频率：ISO8601 时长或 RFC5545 RRULE。" },
              "expire_at": { "type": "string", "format": "date-time", "description": "Expiration time (ISO8601).", "x-description-zh": "过期时间（ISO8601）。" },
              "next_auto_update_at": { "type": "string", "format": "date-time", "description": "Next auto update time (ISO8601).", "x-description-zh": "下次自动更新时间（ISO8601）。" },
              "read_perm_level": { "$ref": "#/$defs/ReadPerm" },
              "write_perm_level": { "$ref": "#/$defs/WritePerm" },
              "read_whitelist": { "$ref": "#/$defs/IdList" },
              "read_blacklist": { "$ref": "#/$defs/IdList" },
              "write_whitelist": { "$ref": "#/$defs/IdList" },
              "write_blacklist": { "$ref": "#/$defs/IdList" }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Label" } }, "required": ["op","target"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "anyOf": [
              { "required": ["tags"] },
              { "required": ["facets"] }
            ],
            "properties": {
              "tags": { "$ref": "#/$defs/Tags" },
              "facets": { "$ref": "#/$defs/Facets" },
              "mode": {
                "type": "string",
                "enum": ["add", "replace", "remove"],
                "default": "add",
                "description": "Tag application mode: add (append), replace (overwrite existing), or remove (delete from matching entries).",
                "x-description-zh": "标签操作模式：add 追加，replace 覆盖原有，remove 从匹配项删除。"
              }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Update" } }, "required": ["op","target"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "required": ["set"],
            "additionalProperties": false,
            "properties": {
              "set": {
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                  "text": { "type": "string" },
                  "time": { "type": "string", "format": "date-time" },
                  "type": { "$ref": "#/$defs/Type" },
                  "ttl": { "$ref": "#/$defs/ISO8601Duration" },
                  "weight": { "type": "number", "minimum": 0, "maximum": 1, "description": "Single score (ordering/importance). Range [0,1]; higher means more important. Suggested mapping: low≈0.2, normal≈0.5, high≈0.8, urgent≈1.0.", "x-description-zh": "单一评分（排序/重要性）。范围 [0,1]；越大越重要。示例映射（建议）：低≈0.2、正常≈0.5、高≈0.8、紧急≈1.0。" },
                  "subject": { "type": "string" },
                  "location": { "type": "string" },
                  "topic": { "type": "string" },
                  "facets": { "$ref": "#/$defs/Facets" },
                  "auto_frequency": { "type": "string" },
                  "expire_at": { "type": "string", "format": "date-time" },
                  "next_auto_update_at": { "type": "string", "format": "date-time" },
                  "read_perm_level": { "$ref": "#/$defs/ReadPerm" },
                  "write_perm_level": { "$ref": "#/$defs/WritePerm" },
                  "read_whitelist": { "$ref": "#/$defs/IdList" },
                  "read_blacklist": { "$ref": "#/$defs/IdList" },
                  "write_whitelist": { "$ref": "#/$defs/IdList" },
                  "write_blacklist": { "$ref": "#/$defs/IdList" }
                }
              }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Merge" } }, "required": ["op"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "strategy": {
                "type": "string",
                "enum": ["merge_into_primary"],
                "default": "merge_into_primary",
                "description": "Merge strategy: merge_into_primary merges others into the primary entry (default).",
                "x-description-zh": "合并策略：merge_into_primary（默认）将其他条目合并到主条目。"
              },
              "primary_id": { "type": "string" },
              "soft_delete_children": { "type": "boolean", "default": true },
              "skip_reembedding": { "type": "boolean", "default": false, "description": "If true, do not regenerate embedding for the primary after merge.", "x-description-zh": "若为 true，合并后不为主记忆重新生成嵌入向量。" }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Promote" } }, "required": ["op","target"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "oneOf": [
              { "required": ["weight"] },
              { "required": ["weight_delta"] },
              { "required": ["remind"] }
            ],
            "properties": {
              "weight": { "type": "number", "minimum": 0, "maximum": 1, "description": "Set absolute weight in [0,1]. Mutually exclusive with weight_delta and remind.", "x-description-zh": "设置绝对权重（范围 [0,1]）。与 weight_delta、remind 互斥。" },
              "weight_delta": { "type": "number", "description": "Weight delta: positive increases, negative decreases. Suggested step 0.1–0.5; mutually exclusive with remind.", "x-description-zh": "权重增量：正数上调，负数下调。建议微调步长 0.1~0.5；与 remind 互斥。" },
              "remind": {
                "type": "object",
                "required": ["rrule"],
                "additionalProperties": false,
                "properties": {
                  "rrule": { "type": "string", "description": "RFC5545 RRULE", "x-description-zh": "RFC5545 RRULE 规则字符串" },
                  "until": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Demote" } }, "required": ["op","target"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "oneOf": [
              { "required": ["archive"] },
              { "required": ["weight"] },
              { "required": ["weight_delta"] }
            ],
            "properties": {
              "archive": { "type": "boolean", "description": "Archive: prototype lowers weight; result clamped to [0,1]. Mutually exclusive with weight/weight_delta.", "x-description-zh": "归档：原型实现为降低权重；结果夹紧到 [0,1]。与 weight/weight_delta 互斥。" },
              "weight": { "type": "number", "minimum": 0, "maximum": 1, "description": "Set absolute weight in [0,1]. Mutually exclusive with archive and weight_delta.", "x-description-zh": "设置绝对权重（范围 [0,1]）。与 archive、weight_delta 互斥。" },
              "weight_delta": { "type": "number", "description": "Relative change (positive up / negative down); result is clamped to [0,1] when writing.", "x-description-zh": "相对调整（正上/负下）；写入时结果会夹紧到 [0,1]。" },
              "reason": { "type": "string", "description": "Optional human explanation for the demotion.", "x-description-zh": "可选的降权原因说明。" }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Delete" } }, "required": ["op","target"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "older_than": { "$ref": "#/$defs/ISO8601Duration" },
              "time_range": { "$ref": "#/$defs/TimeRange" },
              "soft": { "type": "boolean", "default": true },
              "reason": { "type": "string" }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Retrieve" } }, "required": ["op"] },
      "then": {
        "properties": {
          "stage": { "const": "RET" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "include": { "$ref": "#/$defs/IncludeList" }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Summarize" } }, "required": ["op"] },
      "then": {
        "properties": {
          "stage": { "const": "RET" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "focus": { "type": "string" },
              "max_tokens": { "type": "integer", "minimum": 1, "default": 256 }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Split" } }, "required": ["op","target"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "strategy": {
                "type": "string",
                "enum": ["by_sentences","by_chunks","custom"],
                "default": "by_sentences"
              },
              "params": {
                "type": "object",
                "description": "Extra parameters depending on strategy.",
                "additionalProperties": false,
                "properties": {
                  "by_sentences": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "lang": { "type": "string", "enum": ["zh","en","auto"], "default": "auto" },
                      "max_sentences": { "type": "integer", "minimum": 1, "description": "Max sentences per split." }
                    }
                  },
                  "by_chunks": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "chunk_size": { "type": "integer", "minimum": 50, "description": "Max tokens/characters per chunk." },
                      "num_chunks": { "type": "integer", "minimum": 1, "description": "Alternative: force into N equal parts." }
                    }
                  },
                  "custom": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "instruction": { "type": "string", "description": "Instruction for LLM, e.g., '按议题拆分，每部分300字左右'。" },
                      "max_splits": { "type": "integer", "minimum": 1, "default": 10 }
                    }
                  }
                }
              },
              "inherit_all": { "type": "boolean", "default": true }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Lock" } }, "required": ["op","target"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "mode": {
                "type": "string",
                "enum": ["read_only","append_only"],
                "default": "read_only"
              },
              "reason": { "type": "string" },
              "policy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "allow": { "type": "array", "items": { "$ref": "#/$defs/Op" } },
                  "deny": { "type": "array", "items": { "$ref": "#/$defs/Op" } },
                  "reviewers": { "$ref": "#/$defs/IdList" },
                  "expires": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        }
      }
    },

    {
      "if": { "properties": { "op": { "const": "Expire" } }, "required": ["op","target"] },
      "then": {
        "properties": {
          "stage": { "const": "STO" },
          "args": {
            "type": "object",
            "additionalProperties": false,
            "oneOf": [
              { "required": ["ttl"] },
              { "required": ["until"] }
            ],
            "properties": {
              "ttl": { "$ref": "#/$defs/ISO8601Duration" },
              "until": { "type": "string", "format": "date-time" },
              "on_expire": {
                "type": "string",
                "enum": ["soft_delete","hard_delete","demote","anonymize"],
                "default": "soft_delete"
              }
            }
          }
        }
      }
    },

    {  
      "if": {
        "properties": {
          "stage": { "const": "STO" },
          "target": {
            "properties": {
              "search": { "type": "object" }
            },
            "required": ["search"]
          }
        }
      },
      "then": {
        "properties": {
          "target": {
            "properties": {
              "search": {
                "required": ["limit"]
              }
            }
          }
        }
      }
    },

    {  
      "if": {
        "properties": {
          "stage": { "const": "STO" },
          "target": {
            "properties": {
              "filter": { "type": "object" }
            },
            "required": ["filter"]
          }
        }
      },
      "then": {
        "properties": {
          "target": {
            "properties": {
              "filter": {
                "required": ["limit"]
              }
            }
          }
        }
      }
    },

    {  
      "if": {
        "properties": {
          "stage": { "const": "STO" },
          "target": {
            "properties": {
              "all": { "const": true }
            },
            "required": ["all"]
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "properties": {
              "meta": {
                "type": "object",
                "properties": { "dry_run": { "const": true } },
                "required": ["dry_run"]
              }
            },
            "required": ["meta"]
          },
          {
            "properties": {
              "meta": {
                "type": "object",
                "properties": { "confirmation": { "const": true } },
                "required": ["confirmation"]
              }
            },
            "required": ["meta"]
          }
        ]
      }
    }
  ],

  "$defs": {
    "Op": {
      "type": "string",
      "enum": [
        "Encode","Label","Update","Merge","Promote","Demote","Delete",
        "Retrieve","Summarize","Split","Lock","Expire"
      ]
    },
    "Type": {
      "type": "string",
      "description": "Free-form type (supports English/Chinese/custom). Examples: note, event, task, profile, preference, generic.",
      "x-description-zh": "自由文本类型（支持中英文与自定义），示例：note/笔记, event/事件, task/任务, profile/档案, preference/偏好, generic/通用。"
    },
    
    "Embedding": {
      "type": "array",
      "items": { "type": "number" },
      "minItems": 1,
      "description": "Optional; embedding length is not strictly constrained to adapt to different models.",
      "x-description-zh": "可选；向量长度不强约束，以适配不同模型"
    },
    "Tags": {
      "type": "array",
      "items": { "type": "string" },
      "uniqueItems": true,
      "description": "Tags array: free-form words, e.g., [\"project\", \"meeting\"].",
      "x-description-zh": "标签数组：自由词，如 [\"project\", \"meeting\"]。"
    },
  "Facets": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
    "subject": { "type": "string", "description": "Subject/entity, e.g., 'Project A', 'Alice'.", "x-description-zh": "谁/主体，例如 ‘项目A’、‘张三’。" },
    "time": { "type": "string", "format": "date-time", "description": "Time (ISO8601).", "x-description-zh": "时间（ISO8601）。" },
    "location": { "type": "string", "description": "Location/context, e.g., 'Beijing', 'online meeting'.", "x-description-zh": "地点/上下文，例如 ‘北京’、‘线上会议’。" },
    "topic": { "type": "string", "description": "Topic, e.g., 'requirements discussion'.", "x-description-zh": "主题/话题，例如 ‘需求讨论’。" }
      }
    },
    "ReadPerm": {
      "type": "string",
      "enum": ["public","team","private","custom"]
    },
    "WritePerm": {
      "type": "string",
      "enum": ["open","maintainer","owner_only","custom"]
    },
    "IdList": {
      "type": "array",
      "items": { "type": "string" },
      "uniqueItems": true
    },
    "TimeRange": {
      "type": "object",
      "additionalProperties": false,
      "oneOf": [
        { "required": ["start","end"] },
        { "required": ["relative","amount","unit"] }
      ],
      "properties": {
        "start": { "type": "string", "format": "date-time" },
        "end": { "type": "string", "format": "date-time" },
        "relative": { "type": "string", "enum": ["last","next"] },
        "amount": { "type": "integer", "minimum": 1 },
        "unit": { "type": "string", "enum": ["minutes","hours","days","weeks","months","years"] }
      }
    },
    "ISO8601Duration": {
      "type": "string",
      "pattern": "^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$",
      "description": "ISO8601 duration, e.g., P3D, PT1H30M"
    },
    "IncludeList": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "id","text","type","tags","facets","time","subject","location","topic",
          "source","weight",
          "read_perm_level","write_perm_level",
          "read_whitelist","read_blacklist","write_whitelist","write_blacklist"
        ]
      },
      "uniqueItems": true,
      "description": "Whitelist of fields to return when retrieving. Example: include=[\"id\",\"text\",\"weight\"].",
      "x-description-zh": "检索时返回的字段白名单。例如：include=[\"id\",\"text\",\"weight\"]。"
    },
  "Filters": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "time_range": { "$ref": "#/$defs/TimeRange" },
        "has_tags": { "$ref": "#/$defs/Tags" },
        "not_tags": { "$ref": "#/$defs/Tags" },
  "type": { "$ref": "#/$defs/Type", "description": "Filter by type (free-form).", "x-description-zh": "按类型过滤（自由文本）。" },
  "subject": { "type": "string" },
  "location": { "type": "string" },
  "topic": { "type": "string" },
  "weight_gte": { "type": "number", "minimum": 0, "maximum": 1 },
  "weight_lte": { "type": "number", "minimum": 0, "maximum": 1 },
  "expire_before": { "type": "string", "format": "date-time" },
  "expire_after": { "type": "string", "format": "date-time" },
        "limit": { "type": "integer", "minimum": 1 }
      }
    },
    "SearchIntent": {
      "type": "object",
      "additionalProperties": false,
      "oneOf": [ { "required": ["query"] }, { "required": ["vector"] } ],
      "properties": {
        "query": { "type": "string" },
        "vector": { "$ref": "#/$defs/Embedding" },
        "context": {
          "type": "string",
          "description": "Optional natural language context or instruction to steer retrieval.",
          "x-description-zh": "可选的检索上下文/指令，帮助限定搜索语义。"
        }
      }
    },
    "SearchOverrides": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "k": { "type": "integer", "minimum": 1, "default": 10 },
        "alpha": { "type": "number", "minimum": 0, "maximum": 1 },
  "order_by": { "type": "string", "enum": ["relevance","time_desc","time_asc","weight_desc"], "description": "Ordering: relevance, time_desc (new→old), time_asc (old→new), weight_desc (high→low).", "x-description-zh": "排序规则：relevance(相关度)、time_desc(新→旧)、time_asc(旧→新)、weight_desc(高→低)。" }
      }
    },
    "TargetSearch": {
      "type": "object",
      "additionalProperties": false,
  "required": ["intent"],
      "properties": {
  
        "intent": { "$ref": "#/$defs/SearchIntent" },
        "overrides": { "$ref": "#/$defs/SearchOverrides" },
  "limit": { "type": "integer", "minimum": 1, "description": "Max results to return (required in STO stage).", "x-description-zh": "返回上限（STO 阶段必须设置）。" }
      }
    },
    "Target": {
      "type": "object",
      "additionalProperties": false,
  "description": "Target selector (choose one): ids | filter | search | all. Note: In STO stage, filter/search require limit; for all, meta.dry_run=true or meta.confirmation=true is required.",
  "x-description-zh": "目标选择器（四选一）：ids | filter | search | all。注意：STO 阶段使用 filter/search 必须提供 limit；使用 all 时需 meta.dry_run=true 或 meta.confirmation=true。",
      "properties": {
        "ids": {
          "oneOf": [
            { "type": "string" },
            { "type": "array", "items": { "type": "string" }, "uniqueItems": true }
          ]
        },
        "filter": { "$ref": "#/$defs/Filters" },
        "search": { "$ref": "#/$defs/TargetSearch" },
        "all": { "type": "boolean", "default": false }
      },
      "anyOf": [
        { "required": ["ids"] },
        { "required": ["filter"] },
        { "required": ["search"] },
        { "required": ["all"] }
      ],
      "allOf": [
        { "not": { "allOf": [ { "required": ["ids","filter"] } ] } },
        { "not": { "allOf": [ { "required": ["ids","search"] } ] } },
        { "not": { "allOf": [ { "required": ["ids","all"] } ] } },
        { "not": { "allOf": [ { "required": ["all","filter"] } ] } },
        { "not": { "allOf": [ { "required": ["all","search"] } ] } },
        { "not": { "allOf": [ { "required": ["all","ids"] } ] } }
      ]
    }
  }
}